# HTTP Server
upstream rhinobird-api{
  server unix:/home/deploy/tmp/negroku.rhinobird-api.sock fail_timeout=0;
}

server {
  listen 80;
  return 301 https://$host$request_uri;
}

server {
  listen 443;
  ssl on;
  ssl_certificate /etc/ssl/certs/<%= nginx_ssl_certificate %>;
  ssl_certificate_key /etc/ssl/private/<%= nginx_ssl_certificate_key %>;

  server_name <%= fetch(:domains) %>;
  root        <%= fetch(:deploy_to) %>/current;

  access_log /home/<%= fetch(:user) %>/log/<%= fetch(:application) %>-nginx-access.log;
  error_log  /home/<%= fetch(:user) %>/log/<%= fetch(:application) %>-nginx-error.log;

  error_page 404 /404.html;
  location /404.html { root <%= fetch(:deploy_to) %>/current; }

  error_page 500 /500.html;
  location /500.html { root <%= fetch(:deploy_to) %>/current; }

  client_max_body_size 4G;
  keepalive_timeout 10;

  # To make sure any assets can get through :)
  location / {
    try_files $uri @rewrites;
    expires max;
    add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    gzip_static on;
  }

  # If no asset matches, send it to your javascript app. Hopefully it's a route in the app!
  location @rewrites {
    rewrite ^(.+)$ /index.html last;
  }
}
