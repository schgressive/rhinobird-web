# HTTP Server

upstream comments_app {
  server comments-staging.rhinobird.tv:443;
}

<% if fetch(:nginx_use_ssl) %>
server {
  listen 80;
  return 301 https://$host$request_uri;
}
<% end %>

server {

  <% if fetch(:nginx_use_ssl) %>
    listen 443;
    ssl on;
    ssl_certificate <%= fetch(:nginx_ssl_certificate_path) %>/<%= fetch(:nginx_ssl_certificate) %>;
    ssl_certificate_key <%= fetch(:nginx_ssl_certificate_key_path) %>/<%= fetch(:nginx_ssl_certificate_key) %>;
  <% else %>
    listen 80;
  <% end %>

  server_name <%= fetch(:nginx_domains) %>;
  root        <%= fetch(:deploy_to) %>/current/<%= fetch(:nginx_static_dir) %>;

  access_log <%= fetch(:nginx_log_path) %>/nginx-access.log;
  error_log  <%= fetch(:nginx_log_path) %>/nginx-error.log;

  error_page 404 /404.html;
  location /404.html { root <%= fetch(:deploy_to) %>/current/<%= fetch(:nginx_static_dir) %>; }

  error_page 500 /500.html;
  location /500.html { root <%= fetch(:deploy_to) %>/current/<%= fetch(:nginx_static_dir) %>; }

  client_max_body_size 4G;
  keepalive_timeout 10;

  location / {
    try_files $uri $uri/ /index.html;
  }

  # To make sure any assets can get through :)
  location ~ /(admin|registration|v1) {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-FORWARDED_PROTO http;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    <% if fetch(:nginx_use_ssl) %>
      proxy_set_header X-Forwarded-Proto https;
      proxy_pass http://<%= fetch(:api_application) %>-app-server;
    <% else %>
      proxy_pass https://<%= fetch(:api_application) %>-app-server;
    <% end %>
    proxy_redirect off;
  }

  location /comments_app_host {
    rewrite ^/comments_app_host(.*) $1 break;

    proxy_pass https://comments_app;

    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host comments-staging.rhinobird.tv:443;
    proxy_set_header X-Forwarded-Proto https;

    rewrite_log on;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

    proxy_redirect off;
  }

  location ~ /(assets) {
    root <%= fetch(:app_server_assets) %>;
  }

}
